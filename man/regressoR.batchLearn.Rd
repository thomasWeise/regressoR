% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/batchLearn.R
\name{regressoR.batchLearn}
\alias{regressoR.batchLearn}
\title{Apply the Regression Learning to a Directory of Data and Store the
  Fitted Models in another Directory}
\usage{
regressoR.batchLearn(source = getwd(), destination = file.path(source,
  "../models"), loader = function(file) read.csv(file, sep = "\\t")[c(1, 2)],
  selector = path.extensionRegExp("txt"), check.directory = NULL,
  learn.single = TRUE, learn.all = FALSE,
  learners = regressoR.makeLearners(), representations = function(x, y)
  dataTransformeR::Transformation.applyDefault2D(x = x, y = y, addIdentity =
  TRUE), metricGenerator = regressoR.quality::RegressionQualityMetric.default,
  suffix.single = ".model", suffix.all = paste("all", suffix.single, sep =
  "", collapse = ""), q = 0.75, includeMetric = TRUE, cores = 1L,
  logging = TRUE)
}
\arguments{
\item{source}{the source directory, which is recursively searched for files
with data to be modeled}

\item{destination}{the destination folder, will be created if not existing}

\item{loader}{a loader function which accepts a vector of paths and is
supposed to return an \code{n*2} matrix where the first column contains the
\code{x} values and the second column the \code{y} values to model}

\item{selector}{a regular expression against which file names are matched.
Only matching files are considered.}

\item{check.directory}{a function receiving a \code{root} folder and the
\code{path} under \code{root} and decides whether this directory path
should be recursively investigated (be default always \code{TRUE})}

\item{learn.single}{should every single file matching to the \code{selector}
be modeled separately ?}

\item{learn.all}{should all the files in one directory combined and modeled
at once?}

\item{learners}{the model learners to be applied}

\item{representations}{a function which can transform a \code{x}/\code{y}
dataset into a set of transformed data instances}

\item{metricGenerator}{the learning quality metric generator}

\item{suffix.single}{the suffix to append to the files containing the single
models}

\item{suffix.all}{the suffix to be applied to the files containing the models
of all files in a folder}

\item{q}{the modelling quality parameter}

\item{includeMetric}{should the metric used for learning be stored in the
files}

\item{cores}{the number of cores to use (\code{>1L} leads to parallel
execution)}

\item{logging}{should progress information be printed}
}
\description{
Recursively, a \code{source} directory is traversed and all
files matching to a \code{selector} regular expression are picked up,
loaded with a \code{loader}, and then modelled by the regressor. The
resulting models are stored in a \code{destination} folder in a structure
mirroring the source folder.

This method uses \code{\link{regressoR.learnForExport}} to learn the models
and stores them into files using \code{\link{saveRDS}} to store them. They
can later be read using \code{\link{regressoR.loadResult}}.
}
\seealso{
regressoR.learnForExport

regressoR.loadResult
}
